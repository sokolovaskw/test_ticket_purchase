name: test_ticket_purchase_ci
on:
    schedule:
        - cron: '5 * * * *'
    push:
        branches: [ main, master ]

jobs:
    test:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        runs-on: ubuntu-latest

        permissions:
            contents: read
            pages: write
            id-token: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20.11.0'
                cache: 'npm' 

            - name: Install dependencies
              run: npm ci       

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              run: npx playwright test
              env:
                TEST_TELEGRAM_TOKEN: '${{ secrets.TEST_TELEGRAM_TOKEN }}'
                TEST_TELEGRAM_CHAT_ID: '${{ secrets.TEST_TELEGRAM_CHAT_ID }}'
                LINK_GIT: ${{ github.repository }}
                CI_ID: ${{ github.run_id }}

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v4
              if: ${{ !cancelled() }}
              with:
                name: playwright-report
                path: playwright-report/
                retention-days: 30
    
    testit:
        if: always()
        needs: [ test ]

        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        runs-on: ubuntu-latest

        steps:
            - run: |
                pip install testit-cli
                pwd
                testit results import \
                  --url ${{ secrets.TEST_IT_URL }} \
                  --token ${{ secrets.TEST_IT_TOKEN }} \
                  --project-id ${{ secrets.TEST_IT_PROJECT_ID }} \
                  --configuration-id ${{ secrets.TEST_IT_CONF_ID }} \
                  --testrun-name "GitHub test run" \
                  --results results/test-results.xml
